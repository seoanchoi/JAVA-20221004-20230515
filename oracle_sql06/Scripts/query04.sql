/*
 * FUNCTION 객체
 *    - PL/SQL 구문을 사용하여 생성할 수 있는 객체
 *    - 프로시져와 유사하며, 일반 프로그래밍 언어의 함수와 같이 값을 리턴(반환) 한다.
 *    - FUNCTION은 PROCEDURE와 다르게 SQL 구문에 같이 사용할 수 있다.
 */
CREATE OR REPLACE FUNCTION FUNC_SAMPLE1(
    NUM1 NUMBER
  , NUM2 NUMBER
) RETURN NUMBER
IS
BEGIN
	DBMS_OUTPUT.PUT_LINE('함수가 실행됩니다!!!');
    RETURN NUM1 +NUM2;
END;

SELECT * FROM USER_ERRORS;

SELECT FUNC_SAMPLE1(10, 20) FROM DUAL;


CREATE OR REPLACE FUNCTION FUNC_SAMPLE2(
       SALARY NUMBER
     , COMMISSION NUMBER
) RETURN NUMBER
IS
BEGIN
    RETURN FLOOR(SALARY * (1+ NVL(COMMISSION, 0)));
END;

SELECT * FROM USER_ERRORS;

SELECT EMPLOYEE_ID
     , FUNC_SAMPLE2(SALARY, COMMISSION_PCT)
  FROM EMPLOYEES;
 
 
CREATE OR REPLACE FUNCTION FUNC_SAMPLE3(
        F_JOB_ID VARCHAR2
)RETURN VARCHAR2        
IS 
  TITLE VARCHAR(30);
BEGIN 
	SELECT JOB_TITLE INTO TITLE FROM JOBS WHERE JOB_ID = F_JOB_ID;
    RETURN TITLE;
EXCEPTION
     WHEN OTHERS THEN
         DBMS_OUTPUT.PUT_LINE('ERROR: F_JOB_ID=' || F_JOB_ID);
         DBMS_OUTPUT.PUT_LINE('SQL ERROR CODE:' || SQLCODE);
         DBMS_OUTPUT.PUT_LINE('SQL ERROR MESSAGE:' || SQLERRM);
END;

SELECT * FROM USER_ERRORS;

SELECT EMPLOYEE_ID
     , JOB_ID
     , FUNC_SAMPLE3(JOB_ID)
  FROM EMPLOYEES;
 
SELECT  
